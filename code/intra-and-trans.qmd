---
title: "Join Trans-Atlantic and Itra-America datasets"
format: html
editor: source
execute:
  enabled: true
---

```{r}
#| label: setup
#| include: false

knitr::opts_chunk$set(echo = TRUE)


#how to convert rmd to an r script
# https://bookdown.org/yihui/rmarkdown-cookbook/purl.html
```



```{r}
#| label: "install-packages"
#| include: FALSE
#| results: "asis"
#| message: FALSE
#| warning: FALSE
#| echo: FALSE


# Install and load necessary packages
if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman")
pacman::p_load(
  rio,           # Import/export data in various formats
  tidyverse,     # Collection of packages for data manipulation and visualization
  janitor,       # snakecase names
  lubridate,     # Work with dates and times
  purrr,         # Functional programming tools
  dplyr,         # Data manipulation
  stringi,       # used to remove diacriticals

)

if (!requireNamespace("myRutil", quietly = TRUE)) {
  devtools::install("/home/richevans/R-packages/myRutil")
}
library(myRutil)

```


### Import datasets

1. .csv files with codes. These files are used as a lookup tables to replace then numeric rcodes in the original voyages files with place names, ship types, and so on. The tables were scrapped from the 

2. Voyages-IAm-May2023.csv, which is the intra America data from

O’Malley, Gregory E. and Alex Borucki. “Creation of the Intra-American Slave Trade Database.” Journal of Slavery and Data Preservation 4, no. 2 (2023): 3-21. https://doi.org/10.25971/nkg5-cg94.

[Link to the UNC Dataverse repository for the Intra-American database]( https://doi.org/10.7910/DVN/QD3JSH)


@data{DVN/QD3JSH_2023,
author = {Consortium, SlaveVoyages},
publisher = {Harvard Dataverse},
title = {{Intra-American Slave Trade Database}},
UNF = {UNF:6:esAw07njFJ39duH0GwnBwg==},
year = {2023},
version = {V2},
doi = {10.7910/DVN/QD3JSH},
url = {https://doi.org/10.7910/DVN/QD3JSH}
}


3. Voyages-TSTD-May2023.csv

Elits, David. "The Trans-Atlantic Slave Trade Database: Origins, Development, Content." Journal of Slavery and Data Preservation 2, no. 3 (2021): 1-8. https://doi.org/10.25971/R9H6-QX59.



[Link to the UNC Dataverse repository for the Trans-Atlantic database](https://dataverse.unc.edu/dataset.xhtml?persistentId=doi:10.15139/S3/12193)


@data{S3/12193_2016,
author = {Eltis, David et al.},
publisher = {UNC Dataverse},
title = {{Voyages: The Trans-Atlantic Slave Trade Database}},
UNF = {UNF:6:xwIU6H47+lj1QLB+jZzqTg==},
year = {2016},
version = {V3},
doi = {10.15139/S3/12193},
url = {https://doi.org/10.15139/S3/12193}
}

```{r}
#| label: "read-data"
#| include: FALSE
#| results: "asis"
#| message: FALSE
#| warning: FALSE
#| echo: FALSE



# read data files

path <- "/home/richevans/Insync/richard.bc.evans@gmail.com/Google Drive/2-my-work/slave-density/data/files-for-import/"

# the region codes
table_region_codes<- rio::import(paste0(path,"region-codes-spss-2023-table-2.csv"))
table_region_codes <- table_region_codes |> clean_names()

# need NA to use fill to fill down tables
table_region_codes <- table_region_codes |>
mutate(across(everything(), as.character)) %>%
  mutate(across(everything(), ~na_if(., "")))

# this fills down the empty spaces in the broader region categories
table_region_codes <- table_region_codes |> 
  fill(broad_region_value, broad_region, specific_region_value, specific_region_country_or_colony, place_value, places_port_or_location)


# XMIMPFLAG Voyage groupings for estimating imputed slaves
xmimpflag_table <- rio::import(paste0(path,"xmimpflag-table-2023.csv"))


# NATIONAL Country in which ship registered
national_table <-  rio::import(paste0(path,"national-table-2023.csv"))


# TONTYPE Definition of ton used in tonnage
tontype_table <-  rio::import(paste0(path,"tontype-table-2023.csv"))

# RIG Rig of vessel
rig_table <-  rio::import(paste0(path,"rig-table-2023.csv"))

# FATE (FATE1 in 2023 codebook) Particular outcome of voyage
fate_table <-  rio::import(paste0(path,"fate-table-2023.csv"))

# FATE2 Outcome of voyage for slaves
fate2_table <-  rio::import(paste0(path,"fate-2-table-2023.csv"))

# FATE3 Outcome of voyage if vessel captured
fate3_table <-  rio::import(paste0(path,"fate-3-table-2023.csv"))

# FATE4 Outcome of voyage for owner
fate4_table <-  rio::import(paste0(path,"fate-4-table-2023.csv"))

# RESISTANCE African resistance
resistance_table <-  rio::import(paste0(path,"resistance-table-2023.csv"))

# read the data
#path <- "/home/richevans/2-my-work/slave-density/data/"
intra <- rio::import(paste0(path, "Voyages-IAm-May2023.csv"))
trans <- rio::import(paste0(path, "Voyages-TSTD-May2023.csv"))
#trans <- read.table(paste0(path, "Voyages-TSTD-May2023.tab"),  header=TRUE, fill=TRUE, sep="\t")


# ----------- turn empty double quotes in character vars into missing ------------------
intra <- intra |>
    mutate(across(where(is.character), ~ na_if(., "")))

trans <- trans |>
    mutate(across(where(is.character), ~ na_if(., "")))


```

### join the rows of the slave voyages datasets

```{r}
#| lablel: "join"
#| include: FALSE
#| results: "asis"
#| message: FALSE
#| warning: FALSE
#| echo: FALSE


intra <- intra |>
  mutate(intra_or_trans = "intra_america")

trans <- trans |>
  mutate(intra_or_trans = "trans_atlantic")

df <- bind_rows(intra,trans) 


write.csv(df[1:5,],"df5rows.csv")
```

### Make new variables with place names instead of region codes. The new variables have the same base names as the original datasets but with a "_names" suffix to indicate they are place names


Page 29 of the codebook shows a variable "PTDEPTED" ("Port where voyage began") which in not in the datasets. Its definition appears similar to "PORTDEP" (Port of departure). The cookbook and datasets do have "PTDEPIMP", which is imputed place of departure and they do have "PORTDEP".

In the data, "PORTDEP" and "PTDEPIMP" which have place (port or location) codes. Neither variable is complete and are missing in different places. However, "PTDEPIMP" seems to have values when "PORTDEP" is missing, so together they make a complete port of departure variable. Where they both have data, the data matches.

I created PORTDEP_complete_with_imputed and PORTDEP_complete_with_imputed_names which is PORTDEP completed with values from PTDEPTIMP. So some values are imputed and some are not, but the variable is complete. It has place names, not codes.

The codebook has a "FATE 1" but that is called "FATE" in the dataset


```{r}
#| lablel: "switch codes and place names"
#| include: FALSE
#| results: "asis"
#| message: FALSE
#| warning: FALSE
#| echo: FALSE



# Function to replace codes with corresponding strings
replace_codes <- function(value, lookup_table) {
  # Find the index of the value in the place_value column of the lookup_table
  match_index_place <- match(value, lookup_table$place_value)
  
  # Find the index of the value in the specific_region_value column of the lookup_table
  match_index_region <- match(value, lookup_table$specific_region_value)
  
  # Find the index of the value in the broad_region column of the lookup_table
  match_index_broad <- match(value, lookup_table$broad_region_value)
  
  # Replace the value based on the found indexes
  result <- ifelse(
    !is.na(match_index_place), 
    # If the value matches place_value, replace with places_port_or_location
    lookup_table$places_port_or_location[match_index_place], 
    ifelse(!is.na(match_index_region), 
           # If the value matches specific_region_value, replace with specific_region_country_or_colony
           lookup_table$specific_region_country_or_colony[match_index_region], 
           ifelse(!is.na(match_index_broad), 
                  # If the value matches broad_region, replace with broad_region
                  lookup_table$broad_region[match_index_broad], 
                  # If no match is found, retain the original value
                  value)
    )
  )
  
  return(result)
}


# Function to replace codes with corresponding strings
# this is for a two column table, with col names value and label
replace_codes_one_column_table <- function(value, lookup_table) {
  # Find the index of the value in the place_value column of the lookup_table
  match_index_place <- match(value, lookup_table$value)
  
  # Replace the value based on the found indexes
  result <- ifelse(
    !is.na(match_index_place), 
    # If the value matches place_value, replace with places_port_or_location
    lookup_table$label[match_index_place], 
    
    # If no match is found, retain the original value
    value)

  
  return(result)
}



# Region codes to place names
# some codes are not in the codebook, like 80703
df1 <- df |>
  mutate(
    PLACCONS_names = replace_codes(PLACCONS, table_region_codes),
    PLACREG_names = replace_codes(PLACREG, table_region_codes),
    PORTDEP_names = replace_codes(PORTDEP, table_region_codes),
    EMBPORT_names = replace_codes(EMBPORT, table_region_codes),
    EMBPORT2_names = replace_codes(EMBPORT2, table_region_codes),
    PLAC1TRA_names = replace_codes(PLAC1TRA, table_region_codes),
    PLAC2TRA_names = replace_codes(PLAC2TRA, table_region_codes),
    PLAC3TRA_names = replace_codes(PLAC3TRA, table_region_codes),
    MAJBUYPT_names = replace_codes(MAJBUYPT, table_region_codes),
    MJBYPTIMP_names = replace_codes(MJBYPTIMP, table_region_codes),
    NPAFTTRA_names = replace_codes(NPAFTTRA, table_region_codes),
    ARRPORT_names = replace_codes(ARRPORT, table_region_codes),
    ARRPORT2_names = replace_codes(ARRPORT2, table_region_codes),
    SLA1PORT_names = replace_codes(SLA1PORT, table_region_codes),
    ADPSALE1_names = replace_codes(ADPSALE1, table_region_codes),
    ADPSALE2_names = replace_codes(ADPSALE2, table_region_codes),
    MAJSELPT_names = replace_codes(MAJSELPT, table_region_codes),
    MJSLPTIMP_names = replace_codes(MJSLPTIMP, table_region_codes),
    PORTRET_names = replace_codes(PORTRET, table_region_codes),
    CONSTREG_names = replace_codes(CONSTREG, table_region_codes),
    REGISREG_names = replace_codes(REGISREG, table_region_codes),
    DEPTREGIMP_names = replace_codes(DEPTREGIMP, table_region_codes),
    EMBREG_names = replace_codes(EMBREG, table_region_codes),
    EMBREG2_names = replace_codes(EMBREG2, table_region_codes),
    REGEM1_names = replace_codes(REGEM1, table_region_codes),
    REGEM2_names = replace_codes(REGEM2, table_region_codes),
    REGARR_names = replace_codes(REGARR, table_region_codes),
    REGARR2_names = replace_codes(REGARR2, table_region_codes),
    REGDIS1_names = replace_codes(REGDIS1, table_region_codes),
    REGDIS2_names = replace_codes(REGDIS2, table_region_codes),
    REGDIS3_names = replace_codes(REGDIS3, table_region_codes),
    MJSELIMP_names = replace_codes(MJSELIMP, table_region_codes),
    RETRNREG_names = replace_codes(RETRNREG, table_region_codes),
    MJSELIMP1_names = replace_codes(MJSELIMP1, table_region_codes),
    RETRNREG1_names = replace_codes(RETRNREG1, table_region_codes)
  )



# XMIMPFLAG code to names. 
# Note that the codes skip. For example code 109 does not exist.
# Voyage groupings for estimating imputed slaves

df1 <- df1 |> mutate(
XMIMPFLAG_names = replace_codes_one_column_table(XMIMPFLAG, xmimpflag_table))


# NATIONAL code to place names 

df1 <- df1 |> mutate(
NATIONAL_names = replace_codes_one_column_table(NATIONAL, national_table))


# TONTYPE code to names 

df1 <- df1 |> mutate(
TONTYPE_names = replace_codes_one_column_table(TONTYPE, tontype_table))

# RIG code to names 

df1 <- df1 |> mutate(
RIG_names = replace_codes_one_column_table(RIG, rig_table))

# FATE code to names 

df1 <- df1 |> mutate(
FATE_names = replace_codes_one_column_table(FATE, fate_table))

# FATE2 code to names 

df1 <- df1 |> mutate(
FATE2_names = replace_codes_one_column_table(FATE2, fate2_table))

# FATE3 code to names 

df1 <- df1 |> mutate(
FATE3_names = replace_codes_one_column_table(FATE3, fate3_table))

# FATE4 code to names 

df1 <- df1 |> mutate(
FATE4_names = replace_codes_one_column_table(FATE4, fate4_table))

# RESISTANCE code to names 

df1 <- df1 |> mutate(
RESISTANCE_names = replace_codes_one_column_table(RESISTANCE, resistance_table))


```


```{r}
#| eval: false


# this is a check that _names variables got names and don't have all codes 

df1 |> select(contains("_names")) |> glimpz()

df1$FATE_names
df1$FATE4_names
df1$RESISTANCE_names
df1$FATE3_names

df1$FATE
df1$FATE4
df1$RESISTANCE


fate3_table
fate_table
```


### Diacriticals sometimes cause problems with R functions, so they were stripped off character strings


```{r}
#| lablel: "fix-diacritical-marks"
#| include: FALSE
#| results: "asis"
#| message: FALSE
#| warning: FALSE
#| echo: FALSE


 # Convert character variables to ASCII to remove diacritical marks, which makes it hard to
 # for some functions to read

 df2 <- df1 |>
   mutate(across(where(is.character), ~ iconv(., from = "UTF-8", to = "ASCII//TRANSLIT")))
 
 #   Cotsenburg* rich remove these *

```





### Group 1: Date of Events (Broken Down Further)
#### Subgroup 1.1: First Disembarkation of Slaves
- **DATARR32**: Day of first disembarkation of slaves
- **DATARR33**: Month of first disembarkation of slaves
- **DATARR34**: Year of first disembarkation of slaves

#### Subgroup 1.2: Second Place of Landing
- **DATARR36**: Day of arrival at second place of landing
- **DATARR37**: Month of arrival at second place of landing
- **DATARR38**: Year of arrival at second place of landing

#### Subgroup 1.3: Third Disembarkation of Slaves
- **DATARR39**: Day of third disembarkation of slaves
- **DATARR40**: Month of third disembarkation of slaves
- **DATARR41**: Year of third disembarkation of slaves

#### Subgroup 1.4: Completion of Voyage
- **DATARR43**: Day on which voyage completed
- **DATARR44**: Month in which voyage completed
- **DATARR45**: Year in which voyage completed

### Group 2: Complete Date Indicators
- **DATARR32_complete**: Complete date for first disembarkation of slaves (derived variable)
- **DATEBUY_complete**: Complete date for slave purchase began (derived variable)
- **DATEDEP_complete**: Complete date for voyage began (derived variable)
- **DATEEND_complete**: Complete date for voyage completed (derived variable)
- **DATELAND1_complete**: Complete date that slaves landed at first place (derived variable)
- **DATELAND2_complete**: Complete date that slaves landed at second place (derived variable)
- **DATELAND3_complete**: Complete date that slaves landed at third place (derived variable)
- **DATELEFTAFR_complete**: Complete date that vessel left last slaving port (derived variable)

### Group 3: Purchase Dates
- **DATEBUY**: Date that slave purchase began

### Group 4: Departure Dates
- **DATEDEP**: Date that voyage began
- **DATEDEPA**: Day that voyage began
- **DATEDEPAM**: Date ship left on return voyage
- **DATEDEPB**: Month that voyage began
- **DATEDEPC**: Year that voyage began

### Group 5: Landing Dates
- **DATELAND1**: Date that slaves landed at first place
- **DATELAND2**: Date that slaves landed at second place
- **DATELAND3**: Date that slaves landed at third place

### Group 6: End Date
- **DATEEND**: Date when voyage completed

### Group 7: Special Date
- **DATELEFTAFR**: Date that vessel left last slaving port

### Group 8: Year-Based Periods
- **YEAR10**: Decade in which voyage occurred
- **YEAR100**: Century in which voyage occurred
- **YEAR25**: Quarter-century in which voyage occurred
- **YEAR5**: 5-year period in which voyage occurred
- **YEARAF**: Year departed Africa (imputed)
- **YEARAM**: Year of arrival at port of disembarkation (imputed)
- **YEARDEP**: Year voyage began (imputed)

### Dates Involving America
#### Subgroup 1.1: First Disembarkation of Slaves
- **DATARR32**: Day of first disembarkation of slaves
- **DATARR33**: Month of first disembarkation of slaves
- **DATARR34**: Year of first disembarkation of slaves

#### Subgroup 1.2: Second Place of Landing
- **DATARR36**: Day of arrival at second place of landing
- **DATARR37**: Month of arrival at second place of landing
- **DATARR38**: Year of arrival at second place of landing

#### Subgroup 1.3: Third Disembarkation of Slaves
- **DATARR39**: Day of third disembarkation of slaves
- **DATARR40**: Month of third disembarkation of slaves
- **DATARR41**: Year of third disembarkation of slaves

#### Subgroup 1.4: Completion of Voyage
- **DATARR43**: Day on which voyage completed
- **DATARR44**: Month in which voyage completed
- **DATARR45**: Year in which voyage completed

#### Group 5: Landing Dates
- **DATELAND1**: Date that slaves landed at first place (in Americas)
- **DATELAND2**: Date that slaves landed at second place (in Americas)
- **DATELAND3**: Date that slaves landed at third place (in Americas)




 Now work on year variables

Here’s a short codebook for the year-related variables, incorporating both the original names and the newly created names, along with brief descriptions:

### Codebook for Year Variables

| Original Name | New Name | Description |
|---------------|-----------|-------------|
| YRCONS        | year_vessel_construction | Year of vessel’s construction |
| YRREG         | year_vessel_registration  | Year of vessel’s registration |
| DATEDEPC      | year_voyage_began         | Year that the voyage began |
| D1SLATRC      | year_slave_purchase_began | Year that slave purchase began |
| DLSLATRC      | year_left_last_slaving_port | Year that vessel left the last slaving port |
| DATARR34      | year_first_disembarkation | Year of first disembarkation of slaves |
| DATARR38      | year_second_disembarkation | Year of arrival at the second place of landing |
| DATARR41      | year_third_disembarkation | Year of third disembarkation of slaves |
| DDEPAMC       | year_departure_last_place | Year of departure from the last place of landing |
| DATARR45      | year_voyage_completed     | Year in which voyage was completed |
| YEAR5         | period_5_year             | 5-year period in which the voyage occurred |
| YEAR10        | period_decade             | Decade in which the voyage occurred |
| YEAR25        | period_quarter_century    | Quarter-century in which the voyage occurred |
| YEAR100       | period_century            | Century in which the voyage occurred |
| YEARDEP       | year_imputed_voyage_began | Imputed year that the voyage began |
| YEARAF        | year_imputed_left_africa  | Imputed year that the vessel left Africa |
| YEARAM        | year_imputed_arrival      | Imputed year of arrival at the port of disembarkation |


```{r}
#| lablel: "year-variables"
#| include: FALSE
#| results: "asis"
#| message: FALSE
#| warning: FALSE
#| echo: FALSE

df2 |> select(contains("ye")) |> glimpz()

df2 <-
df2 |>
  mutate(
    year_vessel_construction = as.integer(YRCONS),
    year_vessel_registration = as.integer(YRREG),
    year_voyage_began = as.integer(DATEDEPC),
    year_slave_purchase_began = as.integer(D1SLATRC),
    year_left_last_slaving_port = as.integer(DLSLATRC),
    year_first_disembarkation = as.integer(DATARR34),
    year_second_disembarkation = as.integer(DATARR38),
    year_third_disembarkation = as.integer(DATARR41),
    year_departure_last_place = as.integer(DDEPAMC),
    year_voyage_completed = as.integer(DATARR45),
    period_5_year = as.integer(YEAR5),
    period_decade = as.integer(YEAR10),
    period_quarter_century = as.integer(YEAR25),
    period_century = as.integer(YEAR100),
    year_imputed_voyage_began = as.integer(YEARDEP),
    year_imputed_left_africa = as.integer(YEARAF),
    year_imputed_arrival = as.integer(YEARAM)
  )


```


Now months


### Codebook for Month Variables

| Original Name | New Name | Description |
|---------------|-----------|-------------|
| DATEDEPB      | month_voyage_began         | Month that voyage began |
| D1SLATRB      | month_slave_purchase_began | Month that slave purchase began |
| DLSLATRB      | month_left_last_slaving_port | Month that vessel left last slaving port |
| DATARR33      | month_first_disembarkation | Month of first disembarkation of slaves |
| DATARR37      | month_second_disembarkation | Month of arrival at second place of landing |
| DATARR40      | month_third_disembarkation | Month of third disembarkation of slaves |
| DDEPAMB       | month_departure_last_place | Month of departure from last place of landing |
| DATARR44      | month_voyage_completed     | Month in which voyage was completed |


```{r}
#| lablel: "month-variables"
#| include: FALSE
#| results: "asis"
#| message: FALSE
#| warning: FALSE
#| echo: FALSE

df2 <-
df2 |>
  mutate(
    month_voyage_began = as.integer(DATEDEPB),
    month_slave_purchase_began = as.integer(D1SLATRB),
    month_left_last_slaving_port = as.integer(DLSLATRB),
    month_first_disembarkation = as.integer(DATARR33),
    month_second_disembarkation = as.integer(DATARR37),
    month_third_disembarkation = as.integer(DATARR40),
    month_departure_last_place = as.integer(DDEPAMB),
    month_voyage_completed = as.integer(DATARR44)
  )

```

Here’s the short codebook for the day-related variables, including both the original names, new names, and descriptions:

### Codebook for Day Variables

| Original Name | New Name | Description |
|---------------|-----------|-------------|
| DATEDEPA      | day_voyage_began         | Day that the voyage began |
| D1SLATRA      | day_slave_purchase_began | Day that the slave purchase began |
| DLSLATRA      | day_left_last_slaving_port | Day that the vessel left the last slaving port |
| DATARR32      | day_first_disembarkation | Day of the first disembarkation of slaves |
| DATARR36      | day_second_disembarkation | Day of arrival at the second place of landing |
| DATARR39      | day_third_disembarkation | Day of the third disembarkation of slaves |
| DDEPAM        | day_departure_last_place | Day of departure from the last place of landing |
| DATARR43      | day_voyage_completed     | Day on which the voyage was completed |

This codebook lists each variable related to days, both with the original and new names, along with their descriptions.

Let me know if you need further modifications!

```{r}
#| lablel: "day-variables"
#| include: FALSE
#| results: "asis"
#| message: FALSE
#| warning: FALSE
#| echo: FALSE

df2 <-
df2 |>
  mutate(
    day_voyage_began = as.integer(DATEDEPA),
    day_slave_purchase_began = as.integer(D1SLATRA),
    day_left_last_slaving_port = as.integer(DLSLATRA),
    day_first_disembarkation = as.integer(DATARR32),
    day_second_disembarkation = as.integer(DATARR36),
    day_third_disembarkation = as.integer(DATARR39),
    day_departure_last_place = as.integer(DDEPAM),
    day_voyage_completed = as.integer(DATARR43)
  )

```



```{r}
#| lablel: "complete-dates"
#| include: FALSE
#| results: "asis"
#| message: FALSE
#| warning: FALSE
#| echo: FALSE

df2 <-
df2 |>
mutate(
    voyage_began_date = make_datetime(year = year_voyage_began, month = month_voyage_began, day = day_voyage_began),
    slave_purchase_began_date = make_datetime(year = year_slave_purchase_began, month = month_slave_purchase_began, day = day_slave_purchase_began),
    left_last_slaving_port_date = make_datetime(year = year_left_last_slaving_port, month = month_left_last_slaving_port, day = day_left_last_slaving_port),
    first_disembarkation_date = make_datetime(year = year_first_disembarkation, month = month_first_disembarkation, day = day_first_disembarkation),
    second_disembarkation_date = make_datetime(year = year_second_disembarkation, month = month_second_disembarkation, day = day_second_disembarkation),
    third_disembarkation_date = make_datetime(year = year_third_disembarkation, month = month_third_disembarkation, day = day_third_disembarkation),
    departure_last_place_date = make_datetime(year = year_departure_last_place, month = month_departure_last_place, day = day_departure_last_place),
    voyage_completed_date = make_datetime(year = year_voyage_completed, month = month_voyage_completed, day = day_voyage_completed)
  )


```



So at this point not much has been changed in the data
1. make sure variables like XMIMPFLAG NATINIMP have been converted from codes to there real values, like regions have. For example, FATE still has numbers.

I will need to make tables just like for region




1. year variables are all factors with year5 year10, year25, given as ranges, note that they are simple to code back using case_when

1. the harvard databases use the spss 2022 codebook (note the spss in title)
  - rich make sure to include the variables not in the code book in a summary of new variables
  - some are in the papers from Journal of Slavery and Data Preservation
1. RICH be sure to define my new variables like "intra_or_trans"
1. "DATASET" variable does not appear defined anywhere but is the same as intra_or_trans
1. made "" and " " missing
2. atedep created for intra from the parts in intra
3. changing the date format to yyyy-mm-dd.
4. diacritical have been removed to facilitate using some R functions like skim
5. "" have been change to NA
8. WHAT IS AFRINFO???????????????????
9. CONFUSION in the labels vs spss codebook
  - Page 14, DEPTREGIMP1 is Derived broad
  - the label for df2$DEPTREGIMP1 is "imputed", not "derived." 
  - I interpret derived and imputed differently, derived is fro ma formula, imputed is imputed.
10. now I have new location varaible with the names instead of codes, they have _names suffix
  
  
-------------------------------------------------
RICH consider exporting just the set above as a start or an option.
--------------------------------------------------



This only change here is what is above and
1. haven labels turned into values ie factors.
2. Moot now I am not using haven::as_factor. haven labels converted into factors WHAT ABOUT CONTINUOUS VARIABLES???????????? ARE THEY NOW FACTORS??????
3. I have converted R character variables into factors.
  - object here was to convert character variables to factor variables. However, it also removes the haven labels, which I also wanted to do with haven::as_factor(df2) see links in notes as why this step is important it changes the haven label to class factor reason: that way tbl_summary can runs as well as glm and other important R functions than need factors
4. All year variables, (eg YEAR100, YEARAM), they start with "YE", are now factors, for consistency.
5. the components of full dates (days, months and years) are now factors
6. missing data are now factors



this is where I stopped 30july--------------------------------------



```{r}
#| label: "better-names"
#| include: FALSE
#| message: FALSE
#| warning: FALSE
#| echo: FALSE
#| eval: FALSE

df3 <- df2 |> 
  rename(
    intra_or_trans_indicates_whether_the_voyage_is_intra_oceanic_or_trans_atlantic = intra_or_trans,
    voyageid_unique_identifier_for_each_voyage = VOYAGEID,
    yearam_year_and_month_of_the_voyage = YEARAM,
    rig_type_of_rigging_on_the_ship = RIG,
    shipname_name_of_the_ship = SHIPNAME,
    captaina_name_of_the_first_captain = CAPTAINA,
    plac1tra_place_where_the_voyage_began = PLAC1TRA,
    plac2tra_secondary_place_involved_in_the_voyage = PLAC2TRA,
    tslavesd_total_number_of_slaves_disembarked = TSLAVESD,
    arrport_arrival_port_of_the_voyage = ARRPORT,
    sla1port_first_port_where_slaves_were_offloaded = SLA1PORT,
    slaarriv_arrival_date_of_the_ship_at_the_port = SLAARRIV,
    sladvoy_slaves_involved_in_the_voyage = SLADVOY,
    vymrtimp_voyage_mortality_rate_imputed = VYMRTIMP,
    tslmtimp_total_number_of_slaves_transported_imputed = TSLMTIMP,
    vymrtrat_voyage_mortality_rate = VYMRTRAT,
    slaximp_slaves_embarked_imputed = SLAXIMP,
    slamimp_slaves_disembarked_imputed = SLAMIMP,
    fate2_fate_of_the_ship_at_the_end_of_the_voyage = FATE2,
    fate3_secondary_fate_of_the_ship = FATE3,
    fate4_tertiary_fate_of_the_ship = FATE4,
    sladamer_slaves_destined_for_the_americas = SLADAMER,
    adpsale1_first_place_where_slaves_were_sold = ADPSALE1,
    adpsale2_second_place_where_slaves_were_sold = ADPSALE2,
    captainb_name_of_the_second_captain = CAPTAINB,
    placcons_place_of_consignment = PLACCONS,
    placreg_place_of_registration = PLACREG,
    yrcons_year_of_consignment = YRCONS,
    yrreg_year_of_registration = YRREG,
    regarr_region_of_arrival = REGARR,
    regdis1_first_region_of_disembarkation = REGDIS1,
    regdis2_second_region_of_disembarkation = REGDIS2,
    regdis3_third_region_of_disembarkation = REGDIS3,
    regem1_first_embarkation_region = REGEM1,
    regem2_second_embarkation_region = REGEM2,
    regisreg_registration_region = REGISREG,
    constreg_region_of_construction = CONSTREG,
    portdep_port_of_departure = PORTDEP,
    datedepa_date_of_departure = DATEDEPA,
    datedepb_secondary_date_of_departure = DATEDEPB,
    datedepc_tertiary_date_of_departure = DATEDEPC,
    crew_number_of_crew_members = CREW,
    crew2_secondary_crew_count = CREW2,
    crew3_tertiary_crew_count = CREW3,
    d1slatra_first_date_slaves_were_transferred = D1SLATRA,
    d1slatrb_second_date_slaves_were_transferred = D1SLATRB,
    d1slatrc_third_date_slaves_were_transferred = D1SLATRC,
    datarr32_date_of_arrival_field_32 = DATARR32,
    datarr33_date_of_arrival_field_33 = DATARR33,
    datarr34_date_of_arrival_field_34 = DATARR34,
    datarr36_date_of_arrival_field_36 = DATARR36,
    datarr37_date_of_arrival_field_37 = DATARR37,
    datarr38_date_of_arrival_field_38 = DATARR38,
    datarr39_date_of_arrival_field_39 = DATARR39,
    datarr40_date_of_arrival_field_40 = DATARR40,
    datarr41_date_of_arrival_field_41 = DATARR41,
    dlslatra_date_of_last_slave_transfer_first_record = DLSLATRA,
    dlslatrb_date_of_last_slave_transfer_second_record = DLSLATRB,
    dlslatrc_date_of_last_slave_transfer_third_record = DLSLATRC,
    voyage_voyage_details = VOYAGE,
    voy2imp_second_voyage_imputed = VOY2IMP,
    guns_number_of_guns_on_the_ship = GUNS,
    majbuypt_major_buying_port = MAJBUYPT,
    mjbyptimp_major_buying_port_imputed = MJBYPTIMP,
    majbyimp_major_buying_imputed = MAJBYIMP,
    majbyimp1_major_buying_imputed_first_record = MAJBYIMP1,
    majselpt_major_selling_port = MAJSELPT,
    mjslptimp_major_selling_port_imputed = MJSLPTIMP,
    mjselimp_major_selling_imputed = MJSELIMP,
    mjselimp1_major_selling_imputed_first_record = MJSELIMP1,
    national_nationality_of_the_ship = NATIONAL,
    natinimp_nationality_imputed = NATINIMP,
    ncar13_number_of_carriages_field_13 = NCAR13,
    ncar15_number_of_carriages_field_15 = NCAR15,
    npprior_number_of_previous_voyages = NPPRIOR,
    ownera_name_of_the_first_owner = OWNERA,
    ownerb_name_of_the_second_owner = OWNERB,
    ownerc_name_of_the_third_owner = OWNERC,
    ownerd_name_of_the_fourth_owner = OWNERD,
    ownere_name_of_the_fifth_owner = OWNERE,
    ownerf_name_of_the_sixth_owner = OWNERF,
    ownerg_name_of_the_seventh_owner = OWNERG,
    ownerh_name_of_the_eighth_owner = OWNERH,
    resistance_any_resistance_faced_during_the_voyage = RESISTANCE,
    slas32_slave_count_field_32 = SLAS32,
    slas36_slave_count_field_36 = SLAS36,
    slas39_slave_count_field_39 = SLAS39,
    sourcea_first_source_of_information = SOURCEA,
    sourceb_second_source_of_information = SOURCEB,
    sourcec_third_source_of_information = SOURCEC,
    sourced_fourth_source_of_information = SOURCED,
    sourcee_fifth_source_of_information = SOURCEE,
    tonnage_tonnage_of_the_ship = TONNAGE,
    men1_number_of_men_field_1 = MEN1,
    women1_number_of_women_field_1 = WOMEN1,
    boy1_number_of_boys_field_1 = BOY1,
    girl1_number_of_girls_field_1 = GIRL1,
    infant1_number_of_infants_field_1 = INFANT1,
    adult1_number_of_adults_field_1 = ADULT1,
    child1_number_of_children_field_1 = CHILD1,
    male1_number_of_males_field_1 = MALE1,
    female1_number_of_females_field_1 = FEMALE1,
    adlt1imp_number_of_adults_imputed_field_1 = ADLT1IMP,
    chil1imp_number_of_children_imputed_field_1 = CHIL1IMP,
    male1imp_number_of_males_imputed_field_1 = MALE1IMP,
    feml1imp_number_of_females_imputed_field_1 = FEML1IMP,
    slavema1_slave_mortality_field_1 = SLAVEMA1,
    slavemx1_maximum_slave_count_field_1 = SLAVEMX1,
    slavmax1_maximum_slave_count_field_1 = SLAVMAX1,
    menrat1_male_ratio_field_1 = MENRAT1,
    womrat1_female_ratio_field_1 = WOMRAT1,
    boyrat1_boy_ratio_field_1 = BOYRAT1,
    girlrat1_girl_ratio_field_1 = GIRLRAT1,
    malrat1_male_ratio_field_1 = MALRAT1,
    chilrat1_child_ratio_field_1 = CHILRAT1,
    men3_number_of_men_field_3 = MEN3,
    women3_number_of_women_field_3 = WOMEN3,
    boy3_number_of_boys_field_3 = BOY3,
    girl3_number_of_girls_field_3 = GIRL3,
    infant3_number_of_infants_field_3 = INFANT3,
    adult3_number_of_adults_field_3 = ADULT3,
    child3_number_of_children_field_3 = CHILD3,
    male3_number_of_males_field_3 = MALE3,
    female3_number_of_females_field_3 = FEMALE3,
    adlt3imp_number_of_adults_imputed_field_3 = ADLT3IMP,
    chil3imp_number_of_children_imputed_field_3 = CHIL3IMP,
    male3imp_number_of_males_imputed_field_3 = MALE3IMP,
    feml3imp_number_of_females_imputed_field_3 = FEML3IMP,
    slavema3_slave_mortality_field_3 = SLAVEMA3,
    slavemx3_maximum_slave_count_field_3 = SLAVEMX3,
    slavmax3_maximum_slave_count_field_3 = SLAVMAX3,
    menrat3_male_ratio_field_3 = MENRAT3,
    womrat3_female_ratio_field_3 = WOMRAT3,
    boyrat3_boy_ratio_field_3 = BOYRAT3,
    girlrat3_girl_ratio_field_3 = GIRLRAT3,
    malrat3_male_ratio_field_3 = MALRAT3,
    chilrat3_child_ratio_field_3 = CHILRAT3,
    men7_number_of_men_field_7 = MEN7,
    women7_number_of_women_field_7 = WOMEN7,
    boy7_number_of_boys_field_7 = BOY7,
    girl7_number_of_girls_field_7 = GIRL7,
    adult7_number_of_adults_field_7 = ADULT7,
    child7_number_of_children_field_7 = CHILD7,
    male7_number_of_males_field_7 = MALE7,
    female7_number_of_females_field_7 = FEMALE7,
    slavema7_slave_mortality_field_7 = SLAVEMA7,
    slavemx7_maximum_slave_count_field_7 = SLAVEMX7,
    slavmax7_maximum_slave_count_field_7 = SLAVMAX7,
    menrat7_male_ratio_field_7 = MENRAT7,
    womrat7_female_ratio_field_7 = WOMRAT7,
    boyrat7_boy_ratio_field_7 = BOYRAT7,
    girlrat7_girl_ratio_field_7 = GIRLRAT7,
    malrat7_male_ratio_field_7 = MALRAT7,
    chilrat7_child_ratio_field_7 = CHILRAT7,
    year5_year_5 = YEAR5,
    year10_year_10 = YEAR10,
    year25_year_25 = YEAR25,
    year100_year_100 = YEAR100,
    voyageid2_second_voyage_identification_number = VOYAGEID2,
    afrinfo_african_information = AFRINFO,
    other_cargo_other_cargo_carried = OTHER_CARGO,
    comments_comments_on_the_voyage = COMMENTS,
    fate1_primary_fate_of_the_ship = FATE1,
    datebuy_date_of_purchase = DATEBUY,
    dateleftafr_date_left_africa = DATELEFTAFR,
    dateland1_date_landed_first_record = DATELAND1,
    dateland2_date_landed_second_record = DATELAND2,
    dateland3_date_landed_third_record = DATELAND3,
    datebuy1_date_of_purchase_first_record = DATEBUY1,
    datedep_date_of_departure = DATEDEP,
    datebuy2_date_of_purchase_second_record = DATEBUY2,
    adlt2imp_number_of_adults_imputed_field_2 = ADLT2IMP,
    adult2_number_of_adults_field_2 = ADULT2,
    adult4_number_of_adults_field_4 = ADULT4,
    adult5_number_of_adults_field_5 = ADULT5,
    adult6_number_of_adults_field_6 = ADULT6,
    arrport2_second_arrival_port = ARRPORT2,
    boy2_number_of_boys_field_2 = BOY2,
    boy4_number_of_boys_field_4 = BOY4,
    boy5_number_of_boys_field_5 = BOY5,
    boy6_number_of_boys_field_6 = BOY6,
    captainc_name_of_the_third_captain = CAPTAINC,
    chil2imp_number_of_children_imputed_field_2 = CHIL2IMP,
    child2_number_of_children_field_2 = CHILD2,
    child4_number_of_children_field_4 = CHILD4,
    child5_number_of_children_field_5 = CHILD5,
    child6_number_of_children_field_6 = CHILD6,
    crew1_number_of_crew_members_field_1 = CREW1,
    crew4_number_of_crew_members_field_4 = CREW4,
    crew5_number_of_crew_members_field_5 = CREW5,
    crewdied_number_of_crew_members_who_died = CREWDIED,
    datarr43_date_of_arrival_field_43 = DATARR43,
    datarr44_date_of_arrival_field_44 = DATARR44,
    datarr45_date_of_arrival_field_45 = DATARR45,
    datedepam_date_of_departure_from_americas = DATEDEPAM,
    dateend_end_date_of_the_voyage = DATEEND,
    ddepam_departure_date_from_americas_field_1 = DDEPAM,
    ddepamb_departure_date_from_americas_field_2 = DDEPAMB,
    ddepamc_departure_date_from_americas_field_3 = DDEPAMC,
    deptregimp_departure_region_imputed = DEPTREGIMP,
    deptregimp1_departure_region_imputed_first_record = DEPTREGIMP1,
    embport_embarkation_port = EMBPORT,
    embport2_second_embarkation_port = EMBPORT2,
    embreg_embarkation_region = EMBREG,
    embreg2_second_embarkation_region = EMBREG2,
    evgreen_voyage_in_1999_cd_rom = EVGREEN,
    female2_number_of_females_field_2 = FEMALE2,
    female4_number_of_females_field_4 = FEMALE4,
    female5_number_of_females_field_5 = FEMALE5,
    female6_number_of_females_field_6 = FEMALE6,
    feml2imp_number_of_females_imputed_field_2 = FEML2IMP,
    girl2_number_of_girls_field_2 = GIRL2,
    girl4_number_of_girls_field_4 = GIRL4,
    girl5_number_of_girls_field_5 = GIRL5,
    girl6_number_of_girls_field_6 = GIRL6,
    infant2_number_of_infants_field_2 = INFANT2,
    infant4_number_of_infants_field_4 = INFANT4,
    infant5_number_of_infants_field_5 = INFANT5,
    infant6_number_of_infants_field_6 = INFANT6,
    jamcaspr_jamaican_cash_price = JAMCASPR,
    male2_number_of_males_field_2 = MALE2,
    male4_number_of_males_field_4 = MALE4,
    male5_number_of_males_field_5 = MALE5,
    male6_number_of_males_field_6 = MALE6,
    male2imp_number_of_males_imputed_field_2 = MALE2IMP,
    men2_number_of_men_field_2 = MEN2,
    men4_number_of_men_field_4 = MEN4,
    men5_number_of_men_field_5 = MEN5,
    men6_number_of_men_field_6 = MEN6,
    ncar17_number_of_carriages_field_17 = NCAR17,
    ndesert_number_of_desertions = NDESERT,
    npafttra_number_of_post_atlantic_transfers = NPAFTTRA,
    nppretra_number_of_pre_atlantic_transfers = NPPRETRA,
    owneri_name_of_the_ninth_owner = OWNERI,
    ownerj_name_of_the_tenth_owner = OWNERJ,
    ownerk_name_of_the_eleventh_owner = OWNERK,
    ownerl_name_of_the_twelfth_owner = OWNERL,
    ownerm_name_of_the_thirteenth_owner = OWNERM,
    ownern_name_of_the_fourteenth_owner = OWNERN,
    ownero_name_of_the_fifteenth_owner = OWNERO,
    ownerp_name_of_the_sixteenth_owner = OWNERP,
    plac3tra_third_place_involved_in_the_voyage = PLAC3TRA,
    portret_return_port = PORTRET,
    ptdepimp_port_of_departure_imputed = PTDEPIMP,
    regarr2_second_region_of_arrival = REGARR2,
    regem3_third_embarkation_region = REGEM3,
    retrnreg_region_of_return = RETRNREG,
    retrnreg1_region_of_return_first_record = RETRNREG1,
    saild1_sailing_date_field_1 = SAILD1,
    saild2_sailing_date_field_2 = SAILD2,
    saild3_sailing_date_field_3 = SAILD3,
    saild4_sailing_date_field_4 = SAILD4,
    saild5_sailing_date_field_5 = SAILD5,
    sladafri_slaves_destined_for_africa = SLADAFRI,
    slinten2_slave_intensity_field_2 = SLINTEN2,
    slintend_slave_intensity_end = SLINTEND,
    sourcef_sixth_source_of_information = SOURCEF,
    sourceg_seventh_source_of_information = SOURCEG,
    sourceh_eighth_source_of_information = SOURCEH,
    sourcei_ninth_source_of_information = SOURCEI,
    sourcej_tenth_source_of_information = SOURCEJ,
    sourcek_eleventh_source_of_information = SOURCEK,
    sourcel_twelfth_source_of_information = SOURCEL,
    sourcem_thirteenth_source_of_information = SOURCEM,
    sourcen_fourteenth_source_of_information = SOURCEN,
    sourceo_fifteenth_source_of_information = SOURCEO,
    sourcep_sixteenth_source_of_information = SOURCEP,
    sourceq_seventeenth_source_of_information = SOURCEQ,
    sourcer_eighteenth_source_of_information = SOURCER,
    tonmod_tonnage_modification = TONMOD,
    tontype_type_of_tonnage = TONTYPE,
    tslavesp_total_number_of_slaves_shipped = TSLAVESP,
    voy1imp_first_voyage_imputed = VOY1IMP,
    women2_number_of_women_field_2 = WOMEN2,
    women4_number_of_women_field_4 = WOMEN4,
    women5_number_of_women_field_5 = WOMEN5,
    women6_number_of_women_field_6 = WOMEN6,
    xmimpflag_voyage_groupings_for_estimating_imputed_slaves = XMIMPFLAG,
    yearaf_year_after_departure = YEARAF,
    yeardep_year_of_departure = YEARDEP,
    dlslatra_complete_date_of_last_slave_transfer_complete_field_1 = DLSLATRA_complete,
    datarr32_complete_date_of_arrival_complete_field_32 = DATARR32_complete,
    datarr36_complete_date_of_arrival_complete_field_36 = DATARR36_complete,
    datarr39_complete_date_of_arrival_complete_field_39 = DATARR39_complete,
    ddepam_complete_departure_date_from_americas_complete_field_1 = DDEPAM_complete,
    datarr43_complete_date_of_arrival_complete_field_43 = DATARR43_complete
  )
```
